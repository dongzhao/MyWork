
/**
The class generated by codegen 
*/
using MyWork.Model;
using System;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using SYstem.Threading.Tasks;

namespace MyWork.Repository
{
    public class UserRepository : IUserRepository
    {
        protected readonly MyWorkDbContext ctx;
        public UserRepository(MyWorkDbContext context){
            this.ctx = context;
        }

        public void Delete(int id){
            var user = ctx.UserSet.SingleOrDefault(e => e.Id == id);
            ctx.UserSet.Remove(user);
            ctx.SaveChanges();
        }

        public IEnumerable<User> GetAll()
        {
            return ctx.UserSet

            .ToList();
        }

        public User GetById(int id)
        {
            return ctx.UserSet

            .SingleOrDefault(e => e.Id == id);
        }

        public int Create(User user)
        {
            ctx.UserSet.Add(user);
            ctx.SaveChanges();
            return user.Id;
        }

        public int Update(User user)
        {
            ctx.UserSet.Add(user);
            ctx.Entry(user).State = EntityState.Modified;
            ctx.SaveChanges();
            return user.Id;
        }
 
        public IEnumerable<User> SearchByUserName(System.String username)
        {
            return ctx.UserSet

            .Where(e => e.UserName == username).ToList();            
        }                
 
        public IEnumerable<User> SearchByEmailAddress(System.String emailaddress)
        {
            return ctx.UserSet

            .Where(e => e.EmailAddress == emailaddress).ToList();            
        }                
        
    }
}

