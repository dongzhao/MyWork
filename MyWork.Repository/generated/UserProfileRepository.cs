
/**
The class generated by codegen 
*/
using MyWork.Model;
using System;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace MyWork.Repository
{
    public class UserProfileRepository : IUserProfileRepository
    {
        protected readonly MyWorkDbContext ctx;
        public UserProfileRepository(MyWorkDbContext context){
            this.ctx = context;
        }

        public void Delete(int id){
            var userprofile = ctx.UserProfileSet.SingleOrDefault(e => e.Id == id);
            if(ctx.Entry(userprofile).State == EntityState.Detached){
                ctx.UserProfileSet.Attach(userprofile);
            };
            ctx.UserProfileSet.Remove(userprofile);
            ctx.SaveChanges();
        }

        public IEnumerable<UserProfile> GetAll()
        {
            return ctx.UserProfileSet

            .ToList();
        }

        public UserProfile GetById(int id)
        {
            return ctx.UserProfileSet

            .SingleOrDefault(e => e.Id == id);
        }

        public int Create(UserProfile userprofile)
        {
            ctx.UserProfileSet.Add(userprofile);
            ctx.SaveChanges();
            return userprofile.Id;
        }

        public void Update(UserProfile userprofile)
        {
            ctx.UserProfileSet.Attach(userprofile);
            ctx.Entry(userprofile).State = EntityState.Modified;
            ctx.SaveChanges();
        }
 
        public IEnumerable<UserProfile> SearchByFirstName(System.String firstname)
        {
            return ctx.UserProfileSet

            .Where(e => e.FirstName == firstname).ToList();            
        }                
 
        public IEnumerable<UserProfile> SearchByLastName(System.String lastname)
        {
            return ctx.UserProfileSet

            .Where(e => e.LastName == lastname).ToList();            
        }                
 
        public IEnumerable<UserProfile> SearchByGender(System.Boolean gender)
        {
            return ctx.UserProfileSet

            .Where(e => e.Gender == gender).ToList();            
        }                
 
        public IEnumerable<UserProfile> SearchByBirthDate(System.DateTime fromDate, System.DateTime toDate)
        {
            return ctx.UserProfileSet

            .Where(e => e.BirthDate >= fromDate && e.BirthDate <= toDate).ToList();
        }
 
        public IEnumerable<UserProfile> SearchByMobile(System.String mobile)
        {
            return ctx.UserProfileSet

            .Where(e => e.Mobile == mobile).ToList();            
        }                
 
        public IEnumerable<UserProfile> SearchByAddress(System.String address)
        {
            return ctx.UserProfileSet

            .Where(e => e.Address == address).ToList();            
        }                
        
    }
}

